package frm;

import Classes.Enrollment;
import Classes.Student;
import Classes.Subject;
import com.mongodb.client.MongoDatabase;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frame extends javax.swing.JFrame {

    /**
     * Creates new form frame
     */
    public frame() {
        initComponents();
        String sid = "";
        String sname = "";
        String crs = "";
        String yl = "";
        MongoDatabase database = Student.connectToDatabase();
        List<Student> students = Student.getAllStudentsFromDB(database);
        // Add names to the combo box
        stuList.removeAllItems();
        for (Student student : students) {
            stuList.addItem(student.getStudentName()); 
        }
        for (Student student : students) {
            stuName.addItem(student.getStudentName()); 
        }
        
        MongoDatabase database1 = Subject.connectToDatabase();
        List<Subject> subjects = Subject.getAllSubjectsFromDB(database1);
        // Add names to the combo box
        
        DefaultTableModel model = (DefaultTableModel) stuTBL.getModel();
        for(Student student : students){
            sid = student.getStudentID();
            sname = student.getStudentName();
            crs = student.getCourse();
            yl = student.getYearlevel();
            model.addRow(new Object[]{sid, sname, crs, yl});
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        GradePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        stuList = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        EncodePanel = new javax.swing.JPanel();
        subCode = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        grade = new javax.swing.JComboBox<>();
        subDes = new javax.swing.JTextField();
        stuID2 = new javax.swing.JTextField();
        stuName = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        StudentPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        sname = new javax.swing.JTextField();
        sid = new javax.swing.JTextField();
        ylCB = new javax.swing.JComboBox<>();
        crsCB = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        stuTBL = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CODE NI GRECIA");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GradePanel.setBackground(new java.awt.Color(102, 102, 255));
        GradePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Code", "Description", "Units", "Grades"
            }
        ));
        jScrollPane1.setViewportView(tbl);

        GradePanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 184, 560, 358));

        stuList.setEditable(true);
        stuList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        stuList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuListActionPerformed(evt);
            }
        });
        GradePanel.add(stuList, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 390, 30));

        jLabel7.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel7.setText("STUDENT NAME");
        GradePanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 28));

        jTabbedPane5.addTab("Grades", GradePanel);

        EncodePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        subCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subCodeActionPerformed(evt);
            }
        });
        EncodePanel.add(subCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 235, -1));

        jLabel2.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel2.setText("Grade");
        EncodePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 160, 20));

        jLabel3.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel3.setText("Student ID");
        EncodePanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 130, 20));

        jLabel4.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel4.setText("Student Name");
        EncodePanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 130, 20));

        jLabel5.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel5.setText("Subject Code");
        EncodePanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 130, 20));

        jLabel6.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel6.setText("Subject Description");
        EncodePanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 160, 20));

        grade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.0", "1.25", "1.5", "1.75", "2.0", "2.25", "2.50", "2.75", "3.00", "5.00" }));
        grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeActionPerformed(evt);
            }
        });
        EncodePanel.add(grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 235, -1));
        EncodePanel.add(subDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 240, -1));
        EncodePanel.add(stuID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 240, -1));

        stuName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuNameActionPerformed(evt);
            }
        });
        EncodePanel.add(stuName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 235, -1));

        jButton3.setText("SAVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        EncodePanel.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 110, 40));

        jTabbedPane5.addTab("Encode Grades", EncodePanel);

        StudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel8.setText("Year Level");
        StudentPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 140, 20));

        jLabel9.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel9.setText("Student ID");
        StudentPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 100, 20));

        jLabel10.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel10.setText("Student Name");
        StudentPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 140, 20));

        jLabel11.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel11.setText("Course");
        StudentPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 140, 20));
        StudentPanel.add(sname, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 200, -1));

        sid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidActionPerformed(evt);
            }
        });
        StudentPanel.add(sid, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 200, -1));

        ylCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1st Year", "2nd Year", "3rd Year", "4th Year", "5th Year" }));
        StudentPanel.add(ylCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 200, -1));

        crsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BSCS", "BSPSY", "BSIT", "BSCE" }));
        StudentPanel.add(crsCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 200, -1));

        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        StudentPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 100, 40));

        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        StudentPanel.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 100, 40));

        stuTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Student Name", "Course", "Year Level"
            }
        ));
        jScrollPane2.setViewportView(stuTBL);

        StudentPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 550, 250));

        jTabbedPane5.addTab("Student", StudentPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stuListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuListActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        model.setRowCount(0);
        String name = (String) stuList.getSelectedItem(); 
        
        MongoDatabase database = Student.connectToDatabase();
        List<Student> students = Student.getAllStudentsFromDB(database);
        
        MongoDatabase database1 = Subject.connectToDatabase();
        List<Subject> subjects = Subject.getAllSubjectsFromDB(database1);
        
        MongoDatabase database2 = Enrollment.connectToDatabase();
        List<Enrollment> enrollments = Enrollment.getAllEnrollmentFromDB(database2);
        
        
        
        
        
        String id = "";
        String scode = "";
        String des = "";
        double units = 0;
        double grades = 0;
        for (Student student : students) {
            if(name.equals(student.getStudentName())){
                id = student.getStudentID();
                break;
            }
        }
        for (Enrollment enrollment : enrollments) {
            if(id.equals(enrollment.getStudentID())){
                scode = enrollment.getSubjectCode();
                grades = enrollment.getGrade();
                for (Subject subject : subjects){
                    if(scode.equals(subject.getSubjectCode())){
                        des = subject.getDescription();
                        units = subject.getUnits();
                    }
                }
                model.addRow(new Object[]{scode, des, units, grades});
            }
        }
        
    }//GEN-LAST:event_stuListActionPerformed

    private void subCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subCodeActionPerformed
        // TODO add your handling code here:
        String cc = (String) subCode.getSelectedItem();
        MongoDatabase database1 = Subject.connectToDatabase();
        List<Subject> subjects = Subject.getAllSubjectsFromDB(database1);
        
        for(Subject subject : subjects){
            if(cc.equals(subject.getSubjectCode())){
                        subDes.setText(subject.getDescription());
                    }
        }
        
        
    }//GEN-LAST:event_subCodeActionPerformed

    private void gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gradeActionPerformed

    private void stuNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuNameActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        subCode.setModel(model);
    
        String nm = (String) stuName.getSelectedItem();
        String id = "";
    
        MongoDatabase database = Student.connectToDatabase();
        List<Student> students = Student.getAllStudentsFromDB(database);
    
        MongoDatabase database2 = Enrollment.connectToDatabase();
        List<Enrollment> enrollments = Enrollment.getAllEnrollmentFromDB(database2);
    
        for (Student student : students) {
            if (nm.equals(student.getStudentName())) {
                stuID2.setText(student.getStudentID());
                id = student.getStudentID();
                break; // Exit loop once the student is found
            }
        }
    
        for (Enrollment enrollment : enrollments) {
            if (id.equals(enrollment.getStudentID())) {
                model.addElement(enrollment.getSubjectCode());
            }
        }
    }//GEN-LAST:event_stuNameActionPerformed

    private void sidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sidActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String id = sid.getText();
        String name = sname.getText();
        String crs = (String) crsCB.getSelectedItem();
        String yl = (String) ylCB.getSelectedItem();
        if (id.isEmpty() || name.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "ID and Name must not be empty.");
                        return; 
                    }
        
        MongoDatabase database = Student.connectToDatabase();
        Student.addStudent(id, name, crs, yl, database);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) stuTBL.getModel();
        model.setRowCount(0);
        MongoDatabase database = Student.connectToDatabase();
        List<Student> students = Student.getAllStudentsFromDB(database);
        String sid = "";
        String sname = "";
        String crs = "";
        String yl = "";
        
        for(Student student : students){
            sid = student.getStudentID();
            sname = student.getStudentName();
            crs = student.getCourse();
            yl = student.getYearlevel();
            model.addRow(new Object[]{sid, sname, crs, yl});
        }
    }//GEN-LAST:event_jButton1ActionPerformed
/*MongoDatabase database2 = Enrollment.connectToDatabase();
        List<Enrollment> enrollments = Enrollment.getAllEnrollmentFromDB(database2);
        
        for(Enrollment enrollment : enrollments){
            if(id.equals(enrollment.getStudentID())){
                if(cd.equals(enrollment.getSubjectCode())){
                    enrollment.setGrade(gra);
                }
            }
        }*/
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
        // Retrieve the grade, student ID, and subject code
        Double x = Double.valueOf((String) grade.getSelectedItem());
        String y = stuID2.getText();
        String z = (String) subCode.getSelectedItem();
        
        Enrollment.updGrade(x, y, z);
        
        // Optionally provide feedback to the user
        JOptionPane.showMessageDialog(this, "Grade updated successfully.");
        
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid grade format. Please select a valid grade.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EncodePanel;
    private javax.swing.JPanel GradePanel;
    private javax.swing.JPanel StudentPanel;
    private javax.swing.JComboBox<String> crsCB;
    private javax.swing.JComboBox<String> grade;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextField sid;
    private javax.swing.JTextField sname;
    private javax.swing.JTextField stuID2;
    private javax.swing.JComboBox<String> stuList;
    private javax.swing.JComboBox<String> stuName;
    private javax.swing.JTable stuTBL;
    private javax.swing.JComboBox<String> subCode;
    private javax.swing.JTextField subDes;
    private javax.swing.JTable tbl;
    private javax.swing.JComboBox<String> ylCB;
    // End of variables declaration//GEN-END:variables
}
